
PPC_add:	"Add"
PPC_addc:	"Add Carrying"
PPC_adde:	"Add Extended"
PPC_addi:	"Add Immediate"
PPC_addic:	"Add Immediate Carrying"
PPC_addis:	"Add Immediate Shifted"
PPC_addme:	"Add to Minus One Extended"
PPC_addze:	"Add to Zero Extended"
PPC_and:	"AND"
PPC_andc:	"AND with Complement"
PPC_andi:	"AND Immediate"
PPC_andis:	"AND Immediate Shifted"
PPC_b:	        "Branch"
PPC_bc:		"Branch Conditional"
PPC_bcctr:	"Branch Conditional to Count Register"
PPC_bclr:	"Branch Conditional to Link Register"
PPC_cmp:	"Compare"
PPC_cmpi:	"Compare Immediate"
PPC_cmpl:	"Compare Logical"
PPC_cmpli:	"Compare Logical Immediate"
PPC_cntlzd:	"Count Leading Zeros Double Word"
PPC_cntlzw:	"Count Leading Zeros Word"
PPC_crand:	"Condition Register AND"
PPC_crandc:	"Condition Register AND with Complement"
PPC_creqv:	"Condition Register Equivalent"
PPC_crnand:	"Condition Register NAND"
PPC_crnor:	"Condition Register NOR"
PPC_cror:	"Condiiton Register OR"
PPC_crorc:	"Condition Register OR with Comlement"
PPC_crxor:	"Condition Register XOR"
PPC_dcba:	""
PPC_dcbf:	"Data Cache Block Flush"
PPC_dcbi:	"Data Cache Block Invalidate"
PPC_dcbst:	"Data Cache Block Store"
PPC_dcbt:	"Data Cache Block Touch"
PPC_dcbtst:	"Data Cache Block Touch for Store"
PPC_dcbz:	"Data Cache Block Set to Zero"
PPC_divd:	"Divide Double Word"
PPC_divdu:	"Divide Double Word Unsigned"
PPC_divw:	"Divide Word"
PPC_divwu:	"Divide Word Unsigned"
PPC_eciwx:	"External Control In Word Indexed"
PPC_ecowx:	"External Control Out Word Indexed"
PPC_eieio:	"Enforce In-Order Execution of I/O"
PPC_eqv:	"Equivalent"
PPC_extsb:	"Extend Sign Byte"
PPC_extsh:	"Extend Sign Half Word"
PPC_extsw:	"Extend Sign Word"
PPC_fabs:	"Floating-Point Absolute Value"
PPC_fadd:	"Floating-Point Add"
PPC_fadds:	"Floating-Point Add (Single-Precision)"
PPC_fcfid:	"Floating-Point Convert from Integer Double Word"
PPC_fcmpo:	"Floating-Point Compare Ordered"
PPC_fcmpu:	"Floating-Point Compare Unordered"
PPC_fctid:	"Floating-Point Convert to Integer Double Word"
PPC_fctidz:	"Floating-Point Convert to Integer Double Word with Round toward Zero"
PPC_fctiw:	"Floating-Point Convert to Integer Word"
PPC_fctiwz:	"Floating-Point Convert to Integer Word with Round toward Zero"
PPC_fdiv:  	"Floating-Point Divide"
PPC_fdivs:	"Floating-Point Divide Single-Precision"
PPC_fmadd:	"Floating-Point Multiply-Add"
PPC_fmadds:	"Floating-Point Multiply-Add Single-Precision"
PPC_fmr:	"Floating-Point Move Register"
PPC_fmsub:	"Floating-Point Multiply-Subtract"
PPC_fmsubs:	"Floating-Point Multiply-Subtract (Single-Precision)"
PPC_fmul:	"Floating-Point Multiply"
PPC_fmuls:	"Floating-Point Multiply Single-Precision"
PPC_fnabs:	"Floating-Point Negative Absolute Value"
PPC_fneg:	"Floating-Point Negate"
PPC_fnmadd:	"Floating-Point Negative Multiply-Add"
PPC_fnmadds:	"Floating-Point Negative Multiply-Add Single-Precision"
PPC_fnmsub:	"Floating-Point Negative Multiply-Subtract"
PPC_fnmsubs:	"Floating-Point Negative Multiply-Subtract Single-Precision"
PPC_fres:	"Floating-Point Reciprocal Estimate Single-Precision"
PPC_frsp:	"Floating-Point Round to Single-Precision"
PPC_frsqrte:	"Floating-Point Reciprocal Square Root Estimate"
PPC_fsel:	"Floating-Point Select"
PPC_fsqrt:	"Floating-Point Square Root"
PPC_fsqrts:	"Floating-Point Square Root Single-Precision"
PPC_fsub:	"Floating-Point Subtract"
PPC_fsubs:	"Floating-Point Subtract Single-Precision"
PPC_icbi:	"Instruction Cache Block Invalidate"
PPC_isync:	"Instruction Synchronize"
PPC_lbz:	"Load Byte and Zero"
PPC_lbzu:	"Load Byte and Zero with Update"
PPC_lbzux:	"Load Byte and Zero with Update Indexed"
PPC_lbzx:	"Load Byte and Zero Indexed"
PPC_ld:		"Load Double Word"
PPC_ldarx:	"Load Double Word and Reserve Indexed"
PPC_ldu:	"Load Double Word with Update"
PPC_ldux:	"Load Double Word with Update Indexed"
PPC_ldx:	"Load Double Word Indexed"
PPC_lfd:	"Load Floating-Point Double-Precision"
PPC_lfdu:	"Load Floating-Point Double-Precision with Update"
PPC_lfdux:	"Load Floating-Point Double-Precision with Update Indexed"
PPC_lfdx:	"Load Floating-Point Double-Precision Indexed"
PPC_lfs:	"Load Floating-Point Single-Precision"
PPC_lfsu:	"Load Floating-Point Single-Precision with Update"
PPC_lfsux:	"Load Floating-Point Single-Precision with Update Indexed"
PPC_lfsx:	"Load Floating-Point Single-Precision Indexed"
PPC_lha:	"Load Half Word Algebraic"
PPC_lhau:	"Load Half Word Algebraic with Update"
PPC_lhaux:	"Load Half Word Algebraic with Update Indexed"
PPC_lhax:	"Load Half Word Algebraic Indexed"
PPC_lhbrx:	"Load Half Word Byte-reverse Indexed"
PPC_lhz:	"Load Half Word and Zero"
PPC_lhzu:	"Load Half Word and Zero with Update"
PPC_lhzux:	"Load Half Word and Zero with Update Indexed"
PPC_lhzx:	"Load Half Word and Zero Indexed"
PPC_lmw:	"Load Multiple Word"
PPC_lswi:	"Load String Word Immediate"
PPC_lswx:	"Load String Word Indexed"
PPC_lwa:	"Load Word Algebraic"
PPC_lwarx:	"Load Word and Reserve Indexed"
PPC_lwaux:	"Load Word Algebraic with Update Indexed"
PPC_lwax:	"Load Word Algebraic Indexed"
PPC_lwbrx:	"Load Word Byte-Reverse Indexed"
PPC_lwz:	"Load Word and Zero"
PPC_lwzu:	"Load Word and Zero with Update"
PPC_lwzux:	"Load Word and Zero with Update Indexed"
PPC_lwzx:	"Load Word and Zero Indexed"
PPC_mcrf:	"Move Condition register Field"
PPC_mcrfs:	"Move to Condition Register from FPSCR"
PPC_mcrxr:	"Move to Condition Register from XER"
PPC_mfcr:	"Move from Condition Register"
PPC_mffs:	"Move from FPSCR"
PPC_mfmsr:	"Move from Machine State Register"
PPC_mfspr:	"Move from Special Purpose Register"
PPC_mfsr:	"Move from Segment Register"
PPC_mfsrin:	"Move from Segment Register Indirect"
PPC_mftb:	"Move from Time Base"
PPC_mtcrf:	"Move to Condition Register Fields"
PPC_mtfsb0:	"Move to FPSCR Bit 0"
PPC_mtfsb1:	"Move to FPSCR Bit 1"
PPC_mtfsf:	"Move to FPSCR Fields"
PPC_mtfsfi:	"Move to FPSCR Field Immediate"
PPC_mtmsr:	"Move to Machine State Register"
PPC_mtmsrd:	"Move to Machine State Register Double Word"
PPC_mtspr:	"Move to Special Purpose Register"
PPC_mtsr:	"Move to Segment Register"
PPC_mtsrd:	"Move to Segment Register Double Word"
PPC_mtsrdin:	"Move to Segment Register Indirect Double"
PPC_mtsrin:	"Move to Segment Register Indirect"
PPC_mulhd:	"Multiply High Double Word"
PPC_mulhdu:	"Multiply High Double Word Unsigned"
PPC_mulhw:	"Multiply High Word"
PPC_mulhwu:	"Multiply High Word Unsigned"
PPC_mulld:	"Multiply Low Double Word"
PPC_mulli:	"Multiply Low Immediate"
PPC_mullw:	"Multiply Low"
PPC_nand:	"NAND (not AND)"
PPC_neg:	"Negate"
PPC_nor:	"NOR (not OR)"
PPC_or:		"OR"
PPC_orc:	"OR with Complement"
PPC_ori:	"OR Immediate"
PPC_oris:	"OR Immediate Shifted"
PPC_rfi:	"Return from Interrupt"
PPC_rfid:	"Return from Interrupt Double Word"
PPC_rldcl:	"Rotate Left Double Word then Clear Left"
PPC_rldcr:	"Rotate Left Double Word then Clear Right"
PPC_rldic:	"Rotate Left Double Word Immediate then Clear"
PPC_rldicl:	"Rotate Left Double Word Immediate then Clear Left"
PPC_rldicr:	"Rotate Left Double Word Immediate then Clear Right"
PPC_rldimi:	"Rotate Left Double Word Immediate then Mask Insert"
PPC_rlwimi:	"Rotate Left Word Immediate then Mask Insert"
PPC_rlwinm:	"Rotate Left Word Immediate then AND with Mask"
PPC_rlwnm:	"Rotate Left Word then AND with Mask"
PPC_sc:		"System Call"
PPC_slbia:	"SLB Invalidate All"
PPC_slbie:	"SLB Invalidate Entry"
PPC_sld:	"Shift Left Double Word"
PPC_slw:	"Shift Left Word"
PPC_srad:	"Shift Right Algebraic Double Word"
PPC_sradi:	"Shift Right Algebraic Double Word Immediate"
PPC_sraw:	"Shift Right Algebraic Word"
PPC_srawi:	"Shift Right Algebraic Word Immediate"
PPC_srd:	"Shift Right Double Word"
PPC_srw:	"Shift Right Word"
PPC_stb:	"Store Byte"
PPC_stbu:	"Store Byte with Update"
PPC_stbux:	"Store Byte with Update Indexed"
PPC_stbx:	"Store Byte Indexed"
PPC_std:	"Store Double Word"
PPC_stdcx:	"Store Double Word Conditional Indexed"
PPC_stdu:	"Store Double Word with Update"
PPC_stdux:	"Store Double Word with Update Indexed"
PPC_stdx:       "Store Double Word Indexed"
PPC_stfd:	"Store Floating-Point Double-Precision"
PPC_stfdu:	"Store Floating-Point Double-Precision wiht Update"
PPC_stfdux:	"Store Floating-Point Double-Precision wiht Update Indexed"
PPC_stfdx:	"Store Floating-Point Double-Precision Indexed"
PPC_stfiwx:	"Store Floating-Point as Integer Word Indexed"
PPC_stfs:	"Store Floating-Point Single-Precision"
PPC_stfsu:	"Store Floating-Point Single-Precision with Update"
PPC_stfsux:	"Store Floating-Point Single-Precision with Update Indexed"
PPC_stfsx:	"Store Floating-Point Single-Precision Indexed"
PPC_sth:	"Store Half Word"
PPC_sthbrx:	"Store Half Word Byte-Reverse Indexed"
PPC_sthu:	"Store Half Word with Update"
PPC_sthux:	"Store Half Word with Update Indexed"
PPC_sthx:	"Store Half Word Indexed"
PPC_stmw:	"Store Multiple Word"
PPC_stswi:	"Store String Word Immediate"
PPC_stswx:	"Store String Word Indexed"
PPC_stw:	"Store Word"
PPC_stwbrx:	"Store Word Byte-Reverse Indexed"
PPC_stwcx:	"Store Word Conditional Indexed"
PPC_stwu:	"Store Word with Update"
PPC_stwux:	"Store Word with Update Indexed"
PPC_stwx:	"Store Word Indexed"
PPC_subf:	"Subtract from"
PPC_subfc:	"Subtract from Carrying"
PPC_subfe:	"Subtract from Extended"
PPC_subfic:	"Subtract from Immediate Carrying"
PPC_subfme:	"Subtract from Minus One Extended"
PPC_subfze:	"Subtract from Zero Extended"
PPC_sync:	"Synchronize"
PPC_td:		"Trap Double Word"
PPC_tdi:	"Trap Double Word Immediate"
PPC_tlbia:	"TLB Invalidate All"
PPC_tlbie:	"TLB Invalidate Entry"
PPC_tlbsync:	"TLB Synchronize"
PPC_tw:		"Trap Word"
PPC_twi:	"Trap Word Immediate"
PPC_xor:	"XOR"
PPC_xori:	"XOR Immediate"
PPC_xoris:	"XOR Immediate Shifted"
PPC_cmpwi:	"Compare Word Immediate"
PPC_cmpw:	"Compare Word"
PPC_cmplwi:	"Compare Logical Word Immediate"
PPC_cmplw:	"Compare Logical Word"
PPC_cmpdi:	"Compare Double Word Immediate"
PPC_cmpd:	"Compare Double Word"
PPC_cmpldi:	"Compare Logical Double Word Immediate"
PPC_cmpld:	"Compare Logical Double Word"
PPC_trap:	"Trap Word Unconditionally"
PPC_trapd:	"Trap Double Word Unconditionally"
PPC_twlgt:	"Trap Word if Logically Greater Than"
PPC_twllt:	"Trap Word if Logically Less Than"
PPC_tweq:	"Trap Word if Equal"
PPC_twlge:	"Trap Word if Logically Greater Than or Equal"
PPC_twlle:	"Trap Word if Logically Less Than or Equal"
PPC_twgt:	"Trap Word if Greater Than"
PPC_twge:	"Trap Word if Greater Than or Equal"
PPC_twlt:	"Trap Word if Less Than"
PPC_twle:	"Trap Word if Less Than oe Equal"
PPC_twne:	"Trap Word if Not Equal"
PPC_twlgti:	"Trap Word Immediate if Logically Greater Than"
PPC_twllti:	"Trap Word Immediate if Logically Less Than"
PPC_tweqi:	"Trap Word Immediate if Equal"
PPC_twlgei:	"Trap Word Immediate if Logically Greater Than or Equal"
PPC_twllei:	"Trap Word Immediate if Logically Less Than or Equal"
PPC_twgti:	"Trap Word Immediate if Greater Than"
PPC_twgei:	"Trap Word Immediate if Greater Than or Equal"
PPC_twlti:	"Trap Word Immediate if Less Than"
PPC_twlei:	"Trap Word Immediate if Less Than oe Equal"
PPC_twnei:	"Trap Word Immediate if Not Equal"
PPC_tdlgt:	"Trap Double Word if Logically Greater Than"
PPC_tdllt:	"Trap Double Word if Logically Less Than"
PPC_tdeq:	"Trap Double Word if Equal"
PPC_tdlge:	"Trap Double Word if Logically Greater Than or Equal"
PPC_tdlle:	"Trap Double Word if Logically Less Than or Equal"
PPC_tdgt:	"Trap Double Word if Greater Than"
PPC_tdge:	"Trap Double Word if Greater Than or Equal"
PPC_tdlt:	"Trap Double Word if Less Than"
PPC_tdle:	"Trap Double Word if Less Than oe Equal"
PPC_tdne:	"Trap Double Word if Not Equal"
PPC_tdlgti:	"Trap Double Word Immediate if Logically Greater Than"
PPC_tdllti:	"Trap Double Word Immediate if Logically Less Than"
PPC_tdeqi:	"Trap Double Word Immediate if Equal"
PPC_tdlgei:	"Trap Double Word Immediate if Logically Greater Than or Equal"
PPC_tdllei:	"Trap Double Word Immediate if Logically Less Than or Equal"
PPC_tdgti:	"Trap Double Word Immediate if Greater Than"
PPC_tdgei:	"Trap Double Word Immediate if Greater Than or Equal"
PPC_tdlti:	"Trap Double Word Immediate if Less Than"
PPC_tdlei:	"Trap Double Word Immediate if Less Than oe Equal"
PPC_tdnei:	"Trap Double Word Immediate if Not Equal"
PPC_nop:	"No Operation"
PPC_not:	"Complement Register"
PPC_mr:		"Move Register"
PPC_subi:	"Subtract Immediate"
PPC_subic:	"Subtract Immediate Carrying"
PPC_subis:	"Subtract Immediate Shifted"
PPC_li:		"Load Immediate"
PPC_lis:	"Load Immediate Shifted"
PPC_crset:	"Condition Register Set"
PPC_crnot:	"Condition Register NOT"
PPC_crmove:	"Condition Register Move"
PPC_crclr:	"Condition Register Clear"
PPC_mtxer:	"Move to integer unit exception register"
PPC_mtlr:	"Move to link register"
PPC_mtctr:	"Move to count register"
PPC_mtdsisr:	"Move to DAE/source instruction service register"
PPC_mtdar:	"Move to data address register"
PPC_mtdec:	"Move to decrementer register"
PPC_mtsrr0:	"Move to status save/restore register 0"
PPC_mtsrr1:	"Move to status save/restore register 1"
PPC_mtsprg0:	"Move to general special purpose register 0"
PPC_mtsprg1:	"Move to general special purpose register 1"
PPC_mtsprg2:	"Move to general special purpose register 2"
PPC_mtsprg3:	"Move to general special purpose register 3"
PPC_mttbl:	"Move to time base register (lower)"
PPC_mttbu:	"Move to time base register (upper)"
PPC_mfxer:	"Move from integer unit exception register"
PPC_mflr:	"Move from link register"
PPC_mfctr:	"Move from count register"
PPC_mfdsisr:	"Move from DAE/source instruction service register"
PPC_mfdar:	"Move from data address register"
PPC_mfdec:	"Move from decrementer register"
PPC_mfsrr0:	"Move from status save/restore register 0"
PPC_mfsrr1:	"Move from status save/restore register 1"
PPC_mfsprg0:	"Move from general special purpose register 0"
PPC_mfsprg1:	"Move from general special purpose register 1"
PPC_mfsprg2:	"Move from general special purpose register 2"
PPC_mfsprg3:	"Move from general special purpose register 3"
PPC_mftbl:	"Move from time base register (lower)"
PPC_mftbu:	"Move from time base register (upper)"
PPC_mfpvr:	"Move from processor version register"
PPC_balways:	"Branch unconditionally"
PPC_bt:		"Branch if true"
PPC_bf:		"Branch if false"
PPC_bdnz:	"CTR--; branch if CTR non-zero"
PPC_bdnzt:	"CTR--; branch if CTR non-zero and condition is true"
PPC_bdnzf:	"CTR--; branch if CTR non-zero and condition is false"
PPC_bdz:	"CTR--; branch if CTR zero"
PPC_bdzt:	"CTR--; branch if CTR zero and condition is true"
PPC_bdzf:	"CTR--; branch if CTR zero and condition is false"
PPC_blt:	"Branch if less than"
PPC_ble:	"Branch if less than or equal"
PPC_beq:	"Branch if equal"
PPC_bge:	"Branch if greater than or equal"
PPC_bgt:	"Branch if greater than"
PPC_bne:	"Branch if not equal"
PPC_bso:	"Branch if summary overflow"
PPC_bns:	"Branch if not summary overflow"
PPC_extlwi:	"Extract and Left Justify Immediate"
PPC_extrwi:	"Extract and Right Justify Immediate"
PPC_inslwi:	"Insert from Left Immediate"
PPC_insrwi:	"Insert from Right Immediate"
PPC_rotlwi:	"Rotate Left Immediate"
PPC_rotrwi:	"Rotate Right Immediate"
PPC_rotlw:	"Rotate Left"
PPC_slwi:	"Shift Left Immediate"
PPC_srwi:	"Shift Right Immediate"
PPC_clrlwi:	"Clear Left Immediate"
PPC_clrrwi:	"Clear Right Immediate"
PPC_clrlslwi:	"Clear Left and Shift Left Immediate"

//
//  PowerPC Embedded Controller Instructions
//

PPC_dccci:      "Data cache congruence class invalidate"
PPC_dcread:     "Data cache read"
PPC_icbt:       "Instruction cache block touch"
PPC_iccci:      "Instruction cache congruence class invalidate"
PPC_icread:     "Instruction cache read"
PPC_mfdcr:      "Move from device control register"
PPC_mtdcr:      "Move to device control register"
PPC_rfci:       "Return from critical interrupt"
PPC_tlbre:      "TLB read entry"
PPC_tlbsx:      "TLB search indexed"
PPC_tlbwe:      "TLB write entry"
PPC_wrtee:      "Write external enable"
PPC_wrteei:     "Write external enable immediate"

//
//  New PowerPC instructions
//

PPC_abs:        "Absolute"
PPC_clcs:       "Cache Lines Compute Size"
PPC_clf:        "Cache Line Flush"
PPC_cli:        "Cache Line Invalidate"
PPC_dclst:      "Data Cache Line Store"
PPC_div:        "Divide"
PPC_divs:       "Divide Short"
PPC_doz:        "Different Or Zero"
PPC_dozi:       "Different Or Zero Immediate"
PPC_frsqrtes:   "Floating Reciprocal Square Root Estimate Single"
PPC_hrfid:      "Hypervisor Return from Interrupt Doubleword"
PPC_lscbx:      "Load String And Compare Byte Indexed"
PPC_maskg:      "Mask Generate"
PPC_maskir:     "Mask Insert From Register"
PPC_mfsri:      "Move From Segment Register Indirect"
PPC_mul:        "Multiply"
PPC_nabs:       "Negative Absolute"
PPC_popcntb:    "Population Count Bytes"
PPC_rac:        "Real Address Compute"
PPC_rfsvc:      "Return From SVC"
PPC_rlmi:       "Rotate Left Then Mask Insert"
PPC_rrib:       "Rotate Right And Insert Bit"
PPC_slbmfee:    "SLB Move From Entry ESID"
PPC_slbmfev:    "SLB Move From Entry VSID"
PPC_slbmte:     "SLB Move To Entry"
PPC_sle:        "Shift Left Extended"
PPC_sleq:       "Shift Left Extended With MQ"
PPC_sliq:       "Shift Left Immediate With MQ"
PPC_slliq:      "Shift Left Long Immediate With MQ"
PPC_sllq:       "Shift Left Long With MQ"
PPC_slq:        "Shift Left With MQ"
PPC_sraiq:      "Shift Right Algebraic Immediate With MQ"
PPC_sraq:       "Shift Right Algebraic With MQ"
PPC_sre:        "Shift Right Extended"
PPC_srea:       "Shift Right Extended Algebraic"
PPC_sreq:       "Shift Right Extended With MQ"
PPC_sriq:       "Shift Right Immediate With MQ"
PPC_srliq:      "Shift Right Long Immediate With MQ"
PPC_srlq:       "Shift Right Long With MQ"
PPC_srq:        "Shift Right With MQ"

PPC_mtocrf:     "Move To One Condition Register Field"
PPC_mfocrf:     "Move From One Condition Register Field"

PPC_isel:       "Integer Select"
PPC_isellt:     "Integer Select Less Than"
PPC_iselgt:     "Integer Select Greater Than"
PPC_iseleq:     "Integer Select Equal"
PPC_dcblc:      "Data Cache Block Lock Clear"
PPC_dcbtls:     "Data Cache Block Touch and Lock Set"
PPC_dcbtstls:   "Data Cache Block Touch for Store and Lock Set"
PPC_icblc:      "Instruction Cache Block Lock Clear"
PPC_icbtls:     "Instruction Cache Block Touch and Lock Set"
PPC_tlbivax:    "TLB Invalidate Virtual Address Indexed"
PPC_rfdi:       "Return from Debug Interrupt"
PPC_tlbld:      "Load Data TLB Entry"
PPC_tlbli:      "Load Instruction TLB Entry"

PPC_brinc:            "Bit Reversed Increment"
PPC_evabs:            "Vector Absolute Value"
PPC_evaddiw:          "Vector Add Immediate Word"
PPC_evaddsmiaaw:      "Vector Add Signed, Modulo, Integer to Accumulator Word"
PPC_evaddssiaaw:      "Vector Add Signed, Saturate, Integer to Accumulator Word"
PPC_evaddumiaaw:      "Vector Add Unsigned, Modulo, Integer to Accumulator Word"
PPC_evaddusiaaw:      "Vector Add Unsigned, Saturate, Integer to Accumulator Word"
PPC_evaddw:           "Vector Add Word"
PPC_evand:            "Vector AND"
PPC_evandc:           "Vector AND with Complement"
PPC_evcmpeq:          "Vector Compare Equal"
PPC_evcmpgts:         "Vector Compare Greater Than Signed"
PPC_evcmpgtu:         "Vector Compare Greater Than Unsigned"
PPC_evcmplts:         "Vector Compare Less Than Signed"
PPC_evcmpltu:         "Vector Compare Less Than Unsigned"
PPC_evcntlsw:         "Vector Count Leading Signed Bits Word"
PPC_evcntlzw:         "Vector Count Leading Zeros Word"
PPC_evdivws:          "Vector Divide Word Signed"
PPC_evdivwu:          "Vector Divide Word Unsigned"
PPC_eveqv:            "Vector Equivalent"
PPC_evextsb:          "Vector Extend Sign Byte"
PPC_evextsh:          "Vector Extend Sign Halfword"
PPC_evldd:            "Vector Load Double Word into Double Word"
PPC_evlddx:           "Vector Load Double Word into Double Word Indexed"
PPC_evldh:            "Vector Load Double into Four Halfwords"
PPC_evldhx:           "Vector Load Double into Four Halfwords Indexed"
PPC_evldw:            "Vector Load Double into Two Words"
PPC_evldwx:           "Vector Load Double into Two Words Indexed"
PPC_evlhhesplat:      "Vector Load Halfword into Halfwords Even and Splat"
PPC_evlhhesplatx:     "Vector Load Halfword into Halfwords Even and Splat Indexed"
PPC_evlhhossplat:     "Vector Load Halfword into Halfword Odd Signed and Splat"
PPC_evlhhossplatx:    "Vector Load Halfword into Halfword Odd Signed and Splat Indexed"
PPC_evlhhousplat:     "Vector Load Halfword into Halfword Odd Unsigned and Splat"
PPC_evlhhousplatx:    "Vector Load Halfword into Halfword Odd Unsigned and Splat Indexed"
PPC_evlwhe:           "Vector Load Word into Two Halfwords Even"
PPC_evlwhex:          "Vector Load Word into Two Halfwords Even Indexed"
PPC_evlwhos:          "Vector Load Word into Two Halfwords Odd Signed (with sign extension)"
PPC_evlwhosx:         "Vector Load Word into Two Halfwords Odd Signed Indexed (with sign extension)"
PPC_evlwhou:          "Vector Load Word into Two Halfwords Odd Unsigned (zero-extended)"
PPC_evlwhoux:         "Vector Load Word into Two Halfwords Odd Unsigned Indexed (zero-extended)"
PPC_evlwhsplat:       "Vector Load Word into Two Halfwords and Splat"
PPC_evlwhsplatx:      "Vector Load Word into Two Halfwords and Splat Indexed"
PPC_evlwwsplat:       "Vector Load Word into Word and Splat"
PPC_evlwwsplatx:      "Vector Load Word into Word and Splat Indexed"
PPC_evmergehi:        "Vector Merge High"
PPC_evmergehilo:      "Vector Merge High/Low"
PPC_evmergelo:        "Vector Merge Low"
PPC_evmergelohi:      "Vector Merge Low/High"
PPC_evmhegsmfaa:      "Vector Multiply Halfwords, Even, Guarded, Signed, Modulo, Fractional and Accumulate"
PPC_evmhegsmfan:      "Vector Multiply Halfwords, Even, Guarded, Signed, Modulo, Fractional and Accumulate Negative"
PPC_evmhegsmiaa:      "Vector Multiply Halfwords, Even, Guarded, Signed, Modulo, Integer and Accumulate"
PPC_evmhegsmian:      "Vector Multiply Halfwords, Even, Guarded, Signed, Modulo, Integer and Accumulate Negative"
PPC_evmhegumiaa:      "Vector Multiply Halfwords, Even, Guarded, Unsigned, Modulo, Integer and Accumulate"
PPC_evmhegumian:      "Vector Multiply Halfwords, Even, Guarded, Unsigned, Modulo, Integer and Accumulate Negative"
PPC_evmhesmf:         "Vector Multiply Halfwords, Even, Signed, Modulo, Fractional"
PPC_evmhesmfa:        "Vector Multiply Halfwords, Even, Signed, Modulo, Fractional to Accumulator"
PPC_evmhesmfaaw:      "Vector Multiply Halfwords, Even, Signed, Modulo, Fractional and Accumulate into Words"
PPC_evmhesmfanw:      "Vector Multiply Halfwords, Even, Signed, Modulo, Fractional and Accumulate Negative into Words"
PPC_evmhesmi:         "Vector Multiply Halfwords, Even, Signed, Modulo, Integer"
PPC_evmhesmia:        "Vector Multiply Halfwords, Even, Signed, Modulo, Integer to Accumulator"
PPC_evmhesmiaaw:      "Vector Multiply Halfwords, Even, Signed, Modulo, Integer and Accumulate into Words"
PPC_evmhesmianw:      "Vector Multiply Halfwords, Even, Signed, Modulo, Integer and Accumulate Negative into Words"
PPC_evmhessf:         "Vector Multiply Halfwords, Even, Signed, Saturate, Fractional"
PPC_evmhessfa:        "Vector Multiply Halfwords, Even, Signed, Saturate, Fractional to Accumulator"
PPC_evmhessfaaw:      "Vector Multiply Halfwords, Even, Signed, Saturate, Fractional and Accumulate into Words"
PPC_evmhessfanw:      "Vector Multiply Halfwords, Even, Signed, Saturate, Fractional and Accumulate Negative into Words"
PPC_evmhessiaaw:      "Vector Multiply Halfwords, Even, Signed, Saturate, Integer and Accumulate into Words"
PPC_evmhessianw:      "Vector Multiply Halfwords, Even, Signed, Saturate, Integer and Accumulate Negative into Words"
PPC_evmheumi:         "Vector Multiply Halfwords, Even, Unsigned, Modulo, Integer"
PPC_evmheumia:        "Vector Multiply Halfwords, Even, Unsigned, Modulo, Integer to Accumulator"
PPC_evmheumiaaw:      "Vector Multiply Halfwords, Even, Unsigned, Modulo, Integer and Accumulate into Words"
PPC_evmheumianw:      "Vector Multiply Halfwords, Even, Unsigned, Modulo, Integer and Accumulate Negative into Words"
PPC_evmheusiaaw:      "Vector Multiply Halfwords, Even, Unsigned, Saturate, Integer and Accumulate into Words"
PPC_evmheusianw:      "Vector Multiply Halfwords, Even, Unsigned, Saturate, Integer and Accumulate Negative into Words"
PPC_evmhogsmfaa:      "Vector Multiply Halfwords, Odd, Guarded, Signed, Modulo, Fractional and Accumulate"
PPC_evmhogsmfan:      "Vector Multiply Halfwords, Odd, Guarded, Signed, Modulo, Fractional and Accumulate Negative"
PPC_evmhogsmiaa:      "Vector Multiply Halfwords, Odd, Guarded, Signed, Modulo, Integer and Accumulate"
PPC_evmhogsmian:      "Vector Multiply Halfwords, Odd, Guarded, Signed, Modulo, Integer and Accumulate Negative"
PPC_evmhogumiaa:      "Vector Multiply Halfwords, Odd, Guarded, Unsigned, Modulo, Integer and Accumulate"
PPC_evmhogumian:      "Vector Multiply Halfwords, Odd, Guarded, Unsigned, Modulo, Integer and Accumulate Negative"
PPC_evmhosmf:         "Vector Multiply Halfwords, Odd, Signed, Modulo, Fractional"
PPC_evmhosmfa:        "Vector Multiply Halfwords, Odd, Signed, Modulo, Fractional to Accumulator"
PPC_evmhosmfaaw:      "Vector Multiply Halfwords, Odd, Signed, Modulo, Fractional and Accumulate into Words"
PPC_evmhosmfanw:      "Vector Multiply Halfwords, Odd, Signed, Modulo, Fractional and Accumulate Negative into Words"
PPC_evmhosmi:         "Vector Multiply Halfwords, Odd, Signed, Modulo, Integer"
PPC_evmhosmia:        "Vector Multiply Halfwords, Odd, Signed, Modulo, Integer to Accumulator"
PPC_evmhosmiaaw:      "Vector Multiply Halfwords, Odd, Signed, Modulo, Integer and Accumulate into Words"
PPC_evmhosmianw:      "Vector Multiply Halfwords, Odd, Signed, Modulo, Integer and Accumulate Negative into Words"
PPC_evmhossf:         "Vector Multiply Halfwords, Odd, Signed, Saturate, Fractional"
PPC_evmhossfa:        "Vector Multiply Halfwords, Odd, Signed, Saturate, Fractional to Accumulator"
PPC_evmhossfaaw:      "Vector Multiply Halfwords, Odd, Signed, Saturate, Fractional and Accumulate into Words"
PPC_evmhossfanw:      "Vector Multiply Halfwords, Odd, Signed, Saturate, Fractional and Accumulate Negative into Words"
PPC_evmhossiaaw:      "Vector Multiply Halfwords, Odd, Signed, Saturate, Integer and Accumulate into Words"
PPC_evmhossianw:      "Vector Multiply Halfwords, Odd, Signed, Saturate, Integer and Accumulate Negative into Words"
PPC_evmhoumi:         "Vector Multiply Halfwords, Odd, Unsigned, Modulo, Integer"
PPC_evmhoumia:        "Vector Multiply Halfwords, Odd, Unsigned, Modulo, Integer to Accumulator"
PPC_evmhoumiaaw:      "Vector Multiply Halfwords, Odd, Unsigned, Modulo, Integer and Accumulate into Words"
PPC_evmhoumianw:      "Vector Multiply Halfwords, Odd, Unsigned, Modulo, Integer and Accumulate Negative into Words"
PPC_evmhousiaaw:      "Vector Multiply Halfwords, Odd, Unsigned, Saturate, Integer and Accumulate into Words"
PPC_evmhousianw:      "Vector Multiply Halfwords, Odd, Unsigned, Saturate, Integer and Accumulate Negative into Words"
PPC_evmra:            "Initialize Accumulator"
PPC_evmwhsmf:         "Vector Multiply Word High Signed, Modulo, Fractional"
PPC_evmwhsmfa:        "Vector Multiply Word High Signed, Modulo, Fractional to Accumulator"
PPC_evmwhsmi:         "Vector Multiply Word High Signed, Modulo, Integer"
PPC_evmwhsmia:        "Vector Multiply Word High Signed, Modulo, Integer to Accumulator"
PPC_evmwhssf:         "Vector Multiply Word High Signed, Saturate, Fractional"
PPC_evmwhssfa:        "Vector Multiply Word High Signed, Saturate, Fractional to Accumulator"
PPC_evmwhumi:         "Vector Multiply Word High Unsigned, Modulo, Integer"
PPC_evmwhumia:        "Vector Multiply Word High Unsigned, Modulo, Integer to Accumulator"
PPC_evmwlsmiaaw:      "Vector Multiply Word Low Signed, Modulo, Integer and Accumulate into Words"
PPC_evmwlsmianw:      "Vector Multiply Word Low Signed, Modulo, Integer and Accumulate Negative in Words"
PPC_evmwlssiaaw:      "Vector Multiply Word Low Signed, Saturate, Integer and Accumulate into Words"
PPC_evmwlssianw:      "Vector Multiply Word Low Signed, Saturate, Integer and Accumulate Negative in Words"
PPC_evmwlumi:         "Vector Multiply Word Low Unsigned, Modulo, Integer"
PPC_evmwlumia:        "Vector Multiply Word Low Unsigned, Modulo, Integer to Accumulator"
PPC_evmwlumiaaw:      "Vector Multiply Word Low Unsigned, Modulo, Integer and Accumulate into Words"
PPC_evmwlumianw:      "Vector Multiply Word Low Unsigned, Modulo, Integer and Accumulate Negative in Words"
PPC_evmwlusiaaw:      "Vector Multiply Word Low Unsigned, Saturate, Integer and Accumulate into Words"
PPC_evmwlusianw:      "Vector Multiply Word Low Unsigned, Saturate, Integer and Accumulate Negative in Words"
PPC_evmwsmf:          "Vector Multiply Word Signed, Modulo, Fractional"
PPC_evmwsmfa:         "Vector Multiply Word Signed, Modulo, Fractional to Accumulator"
PPC_evmwsmfaa:        "Vector Multiply Word Signed, Modulo, Fractional and Accumulate"
PPC_evmwsmfan:        "Vector Multiply Word Signed, Modulo, Fractional and Accumulate Negative"
PPC_evmwsmi:          "Vector Multiply Word Signed, Modulo, Integer"
PPC_evmwsmia:         "Vector Multiply Word Signed, Modulo, Integer to Accumulator"
PPC_evmwsmiaa:        "Vector Multiply Word Signed, Modulo, Integer and Accumulate"
PPC_evmwsmian:        "Vector Multiply Word Signed, Modulo, Integer and Accumulate Negative"
PPC_evmwssf:          "Vector Multiply Word Signed, Saturate, Fractional"
PPC_evmwssfa:         "Vector Multiply Word Signed, Saturate, Fractional to Accumulator"
PPC_evmwssfaa:        "Vector Multiply Word Signed, Saturate, Fractional and Accumulate"
PPC_evmwssfan:        "Vector Multiply Word Signed, Saturate, Fractional and Accumulate Negative"
PPC_evmwumi:          "Vector Multiply Word Unsigned, Modulo, Integer"
PPC_evmwumia:         "Vector Multiply Word Unsigned, Modulo, Integer to Accumulator"
PPC_evmwumiaa:        "Vector Multiply Word Unsigned, Modulo, Integer and Accumulate"
PPC_evmwumian:        "Vector Multiply Word Unsigned, Modulo, Integer and Accumulate Negative"
PPC_evnand:           "Vector NAND"
PPC_evneg:            "Vector Negate"
PPC_evnor:            "Vector NOR"
PPC_evor:             "Vector OR"
PPC_evorc:            "Vector OR with Complement Form"
PPC_evrlw:            "Vector Rotate Left Word"
PPC_evrlwi:           "Vector Rotate Left Word Immediate"
PPC_evrndw:           "Vector Round Word"
PPC_evsel:            "Vector Select"
PPC_evslw:            "Vector Shift Left Word"
PPC_evslwi:           "Vector Shift Left Word Immediate"
PPC_evsplatfi:        "Vector Splat Fractional Immediate"
PPC_evsplati:         "Vector Splat Immediate"
PPC_evsrwis:          "Vector Shift Right Word Immediate Signed"
PPC_evsrwiu:          "Vector Shift Right Word Immediate Unsigned"
PPC_evsrws:           "Vector Shift Right Word Signed"
PPC_evsrwu:           "Vector Shift Right Word Unsigned"
PPC_evstdd:           "Vector Store Double of Double"
PPC_evstddx:          "Vector Store Double of Double Indexed"
PPC_evstdh:           "Vector Store Double of Four Halfwords"
PPC_evstdhx:          "Vector Store Double of Four Halfwords Indexed"
PPC_evstdw:           "Vector Store Double of Two Words"
PPC_evstdwx:          "Vector Store Double of Two Words Indexed"
PPC_evstwhe:          "Vector Store Word of Two Halfwords from Even"
PPC_evstwhex:         "Vector Store Word of Two Halfwords from Even Indexed"
PPC_evstwho:          "Vector Store Word of Two Halfwords from Odd"
PPC_evstwhox:         "Vector Store Word of Two Halfwords from Odd Indexed"
PPC_evstwwe:          "Vector Store Word of Word from Even"
PPC_evstwwex:         "Vector Store Word of Word from Even Indexed"
PPC_evstwwo:          "Vector Store Word of Word from Odd"
PPC_evstwwox:         "Vector Store Word of Word from Odd Indexed"
PPC_evsubfsmiaaw:     "Vector Subtract Signed, Modulo, Integer to Accumulator Word"
PPC_evsubfssiaaw:     "Vector Subtract Signed, Saturate, Integer to Accumulator Word"
PPC_evsubfumiaaw:     "Vector Subtract Unsigned, Modulo, Integer to Accumulator Word"
PPC_evsubfusiaaw:     "Vector Subtract Unsigned, Saturate, Integer to Accumulator Word"
PPC_evsubfw:          "Vector Subtract from Word"
PPC_evsubifw:         "Vector Subtract Immediate from Word"
PPC_evxor:            "Vector XOR"
PPC_efdabs:           "Floating-Point Double-Precision Absolute Value"
PPC_efdadd:           "Floating-Point Double-Precision Add"
PPC_efdcfs:           "Floating-Point Double-Precision Convert from Single-Precision"
PPC_efdcfsf:          "Convert Floating-Point Double-Precision from Signed Fraction"
PPC_efdcfsi:          "Convert Floating-Point Double-Precision from Signed Integer"
PPC_efdcfsid:         "Convert Floating-Point Double-Precision from Signed Integer Doubleword"
PPC_efdcfuf:          "Convert Floating-Point Double-Precision from Unsigned Fraction"
PPC_efdcfui:          "Convert Floating-Point Double-Precision from Unsigned Integer"
PPC_efdcfuid:         "Convert Floating-Point Double-Precision from Unsigned Integer Doubleword"
PPC_efdcmpeq:         "Floating-Point Double-Precision Compare Equal"
PPC_efdcmpgt:         "Floating-Point Double-Precision Compare Greater Than"
PPC_efdcmplt:         "Floating-Point Double-Precision Compare Less Than"
PPC_efdctsf:          "Convert Floating-Point Double-Precision to Signed Fraction"
PPC_efdctsi:          "Convert Floating-Point Double-Precision to Signed Integer"
PPC_efdctsidz:        "Convert Floating-Point Double-Precision to Signed Integer Doubleword with Round toward Zero"
PPC_efdctsiz:         "Convert Floating-Point Double-Precision to Signed Integer with Round toward Zero"
PPC_efdctuf:          "Convert Floating-Point Double-Precision to Unsigned Fraction"
PPC_efdctui:          "Convert Floating-Point Double-Precision to Unsigned Integer"
PPC_efdctuidz:        "Convert Floating-Point Double-Precision to Unsigned Integer Doubleword with Round toward Zero"
PPC_efdctuiz:         "Convert Floating-Point Double-Precision to Unsigned Integer with Round toward Zero"
PPC_efddiv:           "Floating-Point Double-Precision Divide"
PPC_efdmul:           "Floating-Point Double-Precision Multiply"
PPC_efdnabs:          "Floating-Point Double-Precision Negative Absolute Value"
PPC_efdneg:           "Floating-Point Double-Precision Negate"
PPC_efdsub:           "Floating-Point Double-Precision Subtract"
PPC_efdtsteq:         "Floating-Point Double-Precision Test Equal"
PPC_efdtstgt:         "Floating-Point Double-Precision Test Greater Than"
PPC_efdtstlt:         "Floating-Point Double-Precision Test Less Than"
PPC_efscfd:           "Floating-Point Single-Precision Convert from Double-Precision"
PPC_efsabs:           "Floating-Point Single-Precision Absolute Value"
PPC_efsadd:           "Floating-Point Single-Precision Add"
PPC_efscfsf:          "Convert Floating-Point Single-Precision from Signed Fraction"
PPC_efscfsi:          "Convert Floating-Point Single-Precision from Signed Integer"
PPC_efscfuf:          "Convert Floating-Point Single-Precision from Unsigned Fraction"
PPC_efscfui:          "Convert Floating-Point Single-Precision from Unsigned Integer"
PPC_efscmpeq:         "Floating-Point Single-Precision Compare Equal"
PPC_efscmpgt:         "Floating-Point Single-Precision Compare Greater Than"
PPC_efscmplt:         "Floating-Point Single-Precision Compare Less Than"
PPC_efsctsf:          "Convert Floating-Point Single-Precision to Signed Fraction"
PPC_efsctsi:          "Convert Floating-Point Single-Precision to Signed Integer"
PPC_efsctsiz:         "Convert Floating-Point Single-Precision to Signed Integer with Round toward Zero"
PPC_efsctuf:          "Convert Floating-Point Single-Precision to Unsigned Fraction"
PPC_efsctui:          "Convert Floating-Point Single-Precision to Unsigned Integer"
PPC_efsctuiz:         "Convert Floating-Point Single-Precision to Unsigned Integer with Round toward Zero"
PPC_efsdiv:           "Floating-Point Single-Precision Divide"
PPC_efsmul:           "Floating-Point Single-Precision Multiply"
PPC_efsnabs:          "Floating-Point Single-Precision Negative Absolute Value"
PPC_efsneg:           "Floating-Point Single-Precision Negate"
PPC_efssub:           "Floating-Point Single-Precision Subtract"
PPC_efststeq:         "Floating-Point Single-Precision Test Equal"
PPC_efststgt:         "Floating-Point Single-Precision Test Greater Than"
PPC_efststlt:         "Floating-Point Single-Precision Test Less Than"
PPC_evfsabs:          "Vector Floating-Point Single-Precision Absolute Value"
PPC_evfsadd:          "Vector Floating-Point Single-Precision Add"
PPC_evfscfsf:         "Vector Convert Floating-Point Single-Precision from Signed Fraction"
PPC_evfscfsi:         "Vector Convert Floating-Point Single-Precision from Signed Integer"
PPC_evfscfuf:         "Vector Convert Floating-Point Single-Precision from Unsigned Fraction"
PPC_evfscfui:         "Vector Convert Floating-Point Single-Precision from Unsigned Integer"
PPC_evfscmpeq:        "Vector Floating-Point Single-Precision Compare Equal"
PPC_evfscmpgt:        "Vector Floating-Point Single-Precision Compare Greater Than"
PPC_evfscmplt:        "Vector Floating-Point Single-Precision Compare Less Than"
PPC_evfsctsf:         "Vector Convert Floating-Point Single-Precision to Signed Fraction"
PPC_evfsctsi:         "Vector Convert Floating-Point Single-Precision to Signed Integer"
PPC_evfsctsiz:        "Vector Convert Floating-Point Single-Precision to Signed Integer with Round toward Zero"
PPC_evfsctuf:         "Vector Convert Floating-Point Single-Precision to Unsigned Fraction"
PPC_evfsctui:         "Vector Convert Floating-Point Single-Precision to Unsigned Integer"
PPC_evfsctuiz:        "Vector Convert Floating-Point Single-Precision to Unsigned Integer with Round toward Zero"
PPC_evfsdiv:          "Vector Floating-Point Single-Precision Divide"
PPC_evfsmul:          "Vector Floating-Point Single-Precision Multiply"
PPC_evfsnabs:         "Vector Floating-Point Single-Precision Negative Absolute Value"
PPC_evfsneg:          "Vector Floating-Point Single-Precision Negate"
PPC_evfssub:          "Vector Floating-Point Single-Precision Subtract"
PPC_evfststeq:        "Vector Floating-Point Single-Precision Test Equal"
PPC_evfststgt:        "Vector Floating-Point Single-Precision Test Greater Than"
PPC_evfststlt:        "Vector Floating-Point Single-Precision Test Less Than"
PPC_bpermd:           "Bit Permute Doubleword"
PPC_divde:            "Divide Doubleword Extended"
PPC_divdeu:           "Divide Doubleword Extended Unsigned"
PPC_ldbrx:            "Load Doubleword Byte-Reverse Indexed"
PPC_prtyd:            "Parity Doubleword"
PPC_stdbrx:           "Store Doubleword Byte-Reverse Indexed"
PPC_cmpb:             "Compare Bytes"
PPC_divwe:            "Divide Word Extended"
PPC_divweu:           "Divide Word Extended Unsigned"
PPC_lbarx:            "Load Byte and Reserve Indexed"
PPC_lharx:            "Load Halfword and Reserve Indexed"
PPC_popcntd:          "Population Count Doubleword"
PPC_popcntw:          "Population Count Word"
PPC_prtyw:            "Parity Word"
PPC_stbcx:            "Store Byte Conditional Indexed"
PPC_sthcx:            "Store Halfword Conditional Indexed"
PPC_addg6s:           "Add and Generate Sixes"
PPC_cbcdtd:           "Convert Binary Coded Decimal to Declets"
PPC_cdtbcd:           "Convert Declets To Binary Coded Decimal"
PPC_dadd:             "DFP Add"
PPC_daddq:            "DFP Add Quad"
PPC_dcffix:           "DFP Convert From Fixed"
PPC_dcffixq:          "DFP Convert From Fixed Quad"
PPC_dcmpo:            "DFP Compare Ordered"
PPC_dcmpoq:           "DFP Compare Ordered Quad"
PPC_dcmpu:            "DFP Compare Unordered"
PPC_dcmpuq:           "DFP Compare Unordered Quad"
PPC_dctdp:            "DFP Convert To DFP Long"
PPC_dctfix:           "DFP Convert To Fixed"
PPC_dctfixq:          "DFP Convert To Fixed Quad"
PPC_dctqpq:           "DFP Convert To DFP Extended"
PPC_ddedpd:           "DFP Decode DPD To BCD"
PPC_ddedpdq:          "DFP Decode DPD To BCD Quad"
PPC_ddiv:             "DFP Divide"
PPC_ddivq:            "DFP Divide Quad"
PPC_denbcd:           "DFP Encode BCD To DPD"
PPC_denbcdq:          "DFP Encode BCD To DPD Quad"
PPC_diex:             "DFP Insert Biased Exponent"
PPC_diexq:            "DFP Insert Biased Exponent Quad"
PPC_dmul:             "DFP Multiply"
PPC_dmulq:            "DFP Multiply Quad"
PPC_dqua:             "DFP Quantize"
PPC_dquai:            "DFP Quantize Immediate"
PPC_dquaiq:           "DFP Quantize Immediate Quad"
PPC_dquaq:            "DFP Quantize Quad"
PPC_drdpq:            "DFP Round To DFP Long"
PPC_drintn:           "DFP Round To FP Integer Without Inexact"
PPC_drintnq:          "DFP Round To FP Integer Without Inexact Quad"
PPC_drintx:           "DFP Round To FP Integer With Inexact"
PPC_drintxq:          "DFP Round To FP Integer With Inexact Quad"
PPC_drrnd:            "DFP Reround"
PPC_drrndq:           "DFP Reround Quad"
PPC_drsp:             "DFP Round To DFP Short"
PPC_dscli:            "DFP Shift Significand Left Immediate"
PPC_dscliq:           "DFP Shift Significand Left Immediate Quad"
PPC_dscri:            "DFP Shift Significand Right Immediate"
PPC_dscriq:           "DFP Shift Significand Right Immediate Quad"
PPC_dsub:             "DFP Subtract"
PPC_dsubq:            "DFP Subtract Quad"
PPC_dtstdc:           "DFP Test Data Class"
PPC_dtstdcq:          "DFP Test Data Class Quad"
PPC_dtstdg:           "DFP Test Data Group"
PPC_dtstdgq:          "DFP Test Data Group Quad"
PPC_dtstex:           "DFP Test Exponent"
PPC_dtstexq:          "DFP Test Exponent Quad"
PPC_dtstsf:           "DFP Test Significance"
PPC_dtstsfq:          "DFP Test Significance Quad"
PPC_dxex:             "DFP Extract Biased Exponent"
PPC_dxexq:            "DFP Extract Biased Exponent Quad"
PPC_dsn:              "Decorated Storage Notify"
PPC_lbdx:             "Load Byte with Decoration Indexed"
PPC_lddx:             "Load Doubleword with Decoration Indexed"
PPC_lfddx:            "Load Floating Doubleword with Decoration Indexed"
PPC_lhdx:             "Load Halfword with Decoration Indexed"
PPC_lwdx:             "Load Word with Decoration Indexed"
PPC_stbdx:            "Store Byte with Decoration Indexed"
PPC_stddx:            "Store Doubleword with Decoration Indexed"
PPC_stfddx:           "Store Floating Doubleword with Decoration Indexed"
PPC_sthdx:            "Store Halfword with Decoration Indexed"
PPC_stwdx:            "Store Word with Decoration Indexed"
PPC_mbar:             "Memory Barrier"
PPC_rfmci:            "Return From Machine Check Interrupt"
PPC_tlbilx:           "TLB Invalidate Local"
PPC_dci:              "Data Cache Invalidate"
PPC_ici:              "Instruction Cache Invalidate"
PPC_mfdcrux:          "Move From Device Control Register User-mode Indexed"
PPC_mfdcrx:           "Move From Device Control Register Indexed"
PPC_mtdcrux:          "Move To Device Control Register User-mode Indexed"
PPC_mtdcrx:           "Move To Device Control Register Indexed"
PPC_dnh:              "Debugger Notify Halt"
PPC_ehpriv:           "Embedded Hypervisor Privilege"
PPC_rfgi:             "Return From Guest Interrupt"
PPC_msgclr:           "Message Clear"
PPC_msgsnd:           "Message Send"
PPC_dcbfep:           "Data Cache Block Flush by External PID"
PPC_dcbstep:          "Data Cache Block Store by External PID"
PPC_dcbtep:           "Data Cache Block Touch by External PID"
PPC_dcbtstep:         "Data Cache Block Touch for Store by External PID"
PPC_dcbzep:           "Data Cache Block set to Zero by External PID"
PPC_evlddepx:         "Vector Load Doubleword into Doubleword by External Process ID Indexed"
PPC_evstddepx:        "Vector Store Doubleword into Doubleword by External Process ID Indexed"
PPC_icbiep:           "Instruction Cache Block Invalidate by External PID"
PPC_lbepx:            "Load Byte by External Process ID Indexed"
PPC_lfdepx:           "Load Floating-Point Double by External Process ID Indexed"
PPC_lhepx:            "Load Halfword by External Process ID Indexed"
PPC_lvepx:            "Load Vector by External Process ID Indexed"
PPC_lvepxl:           "Load Vector by External Process ID Indexed LRU"
PPC_lwepx:            "Load Word by External Process ID Indexed"
PPC_stbepx:           "Store Byte by External Process ID Indexed"
PPC_stfdepx:          "Store Floating-Point Double by External Process ID Indexed"
PPC_sthepx:           "Store Halfword by External Process ID Indexed"
PPC_stvepx:           "Store Vector by External Process ID Indexed"
PPC_stvepxl:          "Store Vector by External Process ID Indexed LRU"
PPC_stwepx:           "Store Word by External Process ID Indexed"
PPC_ldepx:            "Load Doubleword by External Process ID Indexed"
PPC_stdepx:           "Store Doubleword by External Process ID Indexed"
PPC_mfpmr:            "Move From Performance Monitor Register"
PPC_mtpmr:            "Move To Performance Monitor Register"
PPC_mftmr:            "Move From Thread Management Register"
PPC_mttmr:            "Move To Thread Management Register"
PPC_tlbsrx:           "TLB Search and Reserve"
PPC_fcfids:           "Floating Convert From Integer Doubleword Single"
PPC_fcfidu:           "Floating Convert From Integer Doubleword Unsigned"
PPC_fcfidus:          "Floating Convert From Integer Doubleword Unsigned Single"
PPC_fctidu:           "Floating Convert To Integer Doubleword Unsigned"
PPC_fctiduz:          "Floating Convert To Integer Doubleword Unsigned with round toward Zero"
PPC_fctiwu:           "Floating Convert To Integer Word Unsigned"
PPC_fctiwuz:          "Floating Convert To Integer Word Unsigned with round toward Zero"
PPC_ftdiv:            "Floating Test for software Divide"
PPC_ftsqrt:           "Floating Test for software Square Root"
PPC_lfiwax:           "Load Floating-Point as Integer Word Algebraic Indexed"
PPC_lfiwzx:           "Load Floating-Point as Integer Word and Zero Indexed"
PPC_lfdp:             "Load Floating-Point Double Pair"
PPC_lfdpx:            "Load Floating-Point Double Pair Indexed"
PPC_stfdp:            "Store Floating-Point Double Pair"
PPC_stfdpx:           "Store Floating-Point Double Pair Indexed"
PPC_fcpsgn:           "Floating Copy Sign"
PPC_fre:              "Floating Reciprocal Estimate"
PPC_frim:             "Floating Round to Integer Minus"
PPC_frin:             "Floating Round to Integer Nearest"
PPC_frip:             "Floating Round to Integer Plus"
PPC_friz:             "Floating Round to Integer Toward Zero"
PPC_macchw:           "Multiply Accumulate Cross Halfword to Word Modulo Signed"
PPC_macchws:          "Multiply Accumulate Cross Halfword to Word Saturate Signed"
PPC_macchwsu:         "Multiply Accumulate Cross Halfword to Word Saturate Unsigned"
PPC_macchwu:          "Multiply Accumulate Cross Halfword to Word Modulo Unsigned"
PPC_machhw:           "Multiply Accumulate High Halfword to Word Modulo Signed"
PPC_machhws:          "Multiply Accumulate High Halfword to Word Saturate Signed"
PPC_machhwsu:         "Multiply Accumulate High Halfword to Word Saturate Unsigned"
PPC_machhwu:          "Multiply Accumulate High Halfword to Word Modulo Unsigned"
PPC_maclhw:           "Multiply Accumulate Low Halfword to Word Modulo Signed"
PPC_maclhws:          "Multiply Accumulate Low Halfword to Word Saturate Signed"
PPC_maclhwsu:         "Multiply Accumulate Low Halfword to Word Saturate Unsigned"
PPC_maclhwu:          "Multiply Accumulate Low Halfword to Word Modulo Unsigned"
PPC_mulchw:           "Multiply Cross Halfword to Word Signed"
PPC_mulchwu:          "Multiply Cross Halfword to Word Unsigned"
PPC_mulhhw:           "Multiply High Halfword to Word Signed"
PPC_mulhhwu:          "Multiply High Halfword to Word Unsigned"
PPC_mullhw:           "Multiply Low Halfword to Word Signed"
PPC_mullhwu:          "Multiply Low Halfword to Word Unsigned"
PPC_nmacchw:          "Negative Multiply Accumulate Cross Halfword to Word Modulo Signed"
PPC_nmacchws:         "Negative Multiply Accumulate Cross Halfword to Word Saturate Signed"
PPC_nmachhw:          "Negative Multiply Accumulate High Halfword to Word Modulo Signed"
PPC_nmachhws:         "Negative Multiply Accumulate High Halfword to Word Saturate Signed"
PPC_nmaclhw:          "Negative Multiply Accumulate Low Halfword to Word Modulo Signed"
PPC_nmaclhws:         "Negative Multiply Accumulate Low Halfword to Word Saturate Signed"
PPC_dlmzb:            "Determine Leftmost Zero Byte"
PPC_lq:               "Load Quadword"
PPC_stq:              "Store Quadword"
PPC_doze:             "Doze"
PPC_lbzcix:           "Load Byte and Zero Caching Inhibited Indexed"
PPC_ldcix:            "Load Doubleword Caching Inhibited Indexed"
PPC_lhzcix:           "Load Halfword and Zero Caching Inhibited Indexed"
PPC_lwzcix:           "Load Word and Zero Caching Inhibited Indexed"
PPC_nap:              "Nap"
PPC_rvwinkle:         "Rip Van Winkle"
PPC_slbfee:           "SLB Find Entry ESID"
PPC_sleep:            "Sleep"
PPC_stbcix:           "Store Byte Caching Inhibited Indexed"
PPC_stdcix:           "Store Doubleword Caching Inhibited Indexed"
PPC_sthcix:           "Store Halfword Caching Inhibited Indexed"
PPC_stwcix:           "Store Word Caching Inhibited Indexed"
PPC_tlbiel:           "TLB Invalidate Entry Local"
PPC_lvebx:            "Load Vector Element Byte Indexed"
PPC_lvehx:            "Load Vector Element Halfword Indexed"
PPC_lvewx:            "Load Vector Element Word Indexed"
PPC_lvsl:             "Load Vector for Shift Left Indexed"
PPC_lvsr:             "Load Vector for Shift Right Indexed"
PPC_lvx:              "Load Vector Indexed"
PPC_lvxl:             "Load Vector Indexed LRU"
PPC_mfvscr:           "Move From Vector Status and Control Register"
PPC_mtvscr:           "Move To Vector Status and Control Register"
PPC_stvebx:           "Store Vector Element Byte Indexed"
PPC_stvehx:           "Store Vector Element Halfword Indexed"
PPC_stvewx:           "Store Vector Element Word Indexed"
PPC_stvx:             "Store Vector Indexed"
PPC_stvxl:            "Store Vector Indexed LRU"
PPC_vaddcuw:          "Vector Add and Write Carry-Out Unsigned Word"
PPC_vaddfp:           "Vector Add Single-Precision"
PPC_vaddsbs:          "Vector Add Signed Byte Saturate"
PPC_vaddshs:          "Vector Add Signed Halfword Saturate"
PPC_vaddsws:          "Vector Add Signed Word Saturate"
PPC_vaddubm:          "Vector Add Unsigned Byte Modulo"
PPC_vaddubs:          "Vector Add Unsigned Byte Saturate"
PPC_vadduhm:          "Vector Add Unsigned Halfword Modulo"
PPC_vadduhs:          "Vector Add Unsigned Halfword Saturate"
PPC_vadduwm:          "Vector Add Unsigned Word Modulo"
PPC_vadduws:          "Vector Add Unsigned Word Saturate"
PPC_vand:             "Vector Logical AND"
PPC_vandc:            "Vector Logical AND with Complement"
PPC_vavgsb:           "Vector Average Signed Byte"
PPC_vavgsh:           "Vector Average Signed Halfword"
PPC_vavgsw:           "Vector Average Signed Word"
PPC_vavgub:           "Vector Average Unsigned Byte"
PPC_vavguh:           "Vector Average Unsigned Halfword"
PPC_vavguw:           "Vector Average Unsigned Word"
PPC_vcfsx:            "Vector Convert From Signed Fixed-Point Word"
PPC_vcfux:            "Vector Convert From Unsigned Fixed-Point Word"
PPC_vcmpbfp:          "Vector Compare Bounds Single-Precision"
PPC_vcmpeqfp:         "Vector Compare Equal To Single-Precision"
PPC_vcmpequb:         "Vector Compare Equal To Unsigned Byte"
PPC_vcmpequh:         "Vector Compare Equal To Unsigned Halfword"
PPC_vcmpequw:         "Vector Compare Equal To Unsigned Word"
PPC_vcmpgefp:         "Vector Compare Greater Than or Equal To Single-Precision"
PPC_vcmpgtfp:         "Vector Compare Greater Than Single-Precision"
PPC_vcmpgtsb:         "Vector Compare Greater Than Signed Byte"
PPC_vcmpgtsh:         "Vector Compare Greater Than Signed Halfword"
PPC_vcmpgtsw:         "Vector Compare Greater Than Signed Word"
PPC_vcmpgtub:         "Vector Compare Greater Than Unsigned Byte"
PPC_vcmpgtuh:         "Vector Compare Greater Than Unsigned Halfword"
PPC_vcmpgtuw:         "Vector Compare Greater Than Unsigned Word"
PPC_vctsxs:           "Vector Convert To Signed Fixed-Point Word Saturate"
PPC_vctuxs:           "Vector Convert To Unsigned Fixed-Point Word Saturate"
PPC_vexptefp:         "Vector 2 Raised to the Exponent Estimate FloatingPoint"
PPC_vlogefp:          "Vector Log Base 2 Estimate Floating-Point"
PPC_vmaddfp:          "Vector Multiply-Add Single-Precision"
PPC_vmaxfp:           "Vector Maximum Single-Precision"
PPC_vmaxsb:           "Vector Maximum Signed Byte"
PPC_vmaxsh:           "Vector Maximum Signed Halfword"
PPC_vmaxsw:           "Vector Maximum Signed Word"
PPC_vmaxub:           "Vector Maximum Unsigned Byte"
PPC_vmaxuh:           "Vector Maximum Unsigned Halfword"
PPC_vmaxuw:           "Vector Maximum Unsigned Word"
PPC_vmhaddshs:        "Vector Multiply-High-Add Signed Halfword Saturate"
PPC_vmhraddshs:       "Vector Multiply-High-Round-Add Signed Halfword Saturate"
PPC_vminfp:           "Vector Minimum Single-Precision"
PPC_vminsb:           "Vector Minimum Signed Byte"
PPC_vminsh:           "Vector Minimum Signed Halfword"
PPC_vminsw:           "Vector Minimum Signed Word"
PPC_vminub:           "Vector Minimum Unsigned Byte"
PPC_vminuh:           "Vector Minimum Unsigned Halfword"
PPC_vminuw:           "Vector Minimum Unsigned Word"
PPC_vmladduhm:        "Vector Multiply-Low-Add Unsigned Halfword Modulo"
PPC_vmrghb:           "Vector Merge High Byte"
PPC_vmrghh:           "Vector Merge High Halfword"
PPC_vmrghw:           "Vector Merge High Word"
PPC_vmrglb:           "Vector Merge Low Byte"
PPC_vmrglh:           "Vector Merge Low Halfword"
PPC_vmrglw:           "Vector Merge Low Word"
PPC_vmsummbm:         "Vector Multiply-Sum Mixed Byte Modulo"
PPC_vmsumshm:         "Vector Multiply-Sum Signed Halfword Modulo"
PPC_vmsumshs:         "Vector Multiply-Sum Signed Halfword Saturate"
PPC_vmsumubm:         "Vector Multiply-Sum Unsigned Byte Modulo"
PPC_vmsumuhm:         "Vector Multiply-Sum Unsigned Halfword Modulo"
PPC_vmsumuhs:         "Vector Multiply-Sum Unsigned Halfword Saturate"
PPC_vmulesb:          "Vector Multiply Even Signed Byte"
PPC_vmulesh:          "Vector Multiply Even Signed Halfword"
PPC_vmuleub:          "Vector Multiply Even Unsigned Byte"
PPC_vmuleuh:          "Vector Multiply Even Unsigned Halfword"
PPC_vmulosb:          "Vector Multiply Odd Signed Byte"
PPC_vmulosh:          "Vector Multiply Odd Signed Halfword"
PPC_vmuloub:          "Vector Multiply Odd Unsigned Byte"
PPC_vmulouh:          "Vector Multiply Odd Unsigned Halfword"
PPC_vnmsubfp:         "Vector Negative Multiply-Subtract Single-Precision"
PPC_vnor:             "Vector Logical NOR"
PPC_vor:              "Vector Logical OR"
PPC_vperm:            "Vector Permute"
PPC_vpkpx:            "Vector Pack Pixel"
PPC_vpkshss:          "Vector Pack Signed Halfword Signed Saturate"
PPC_vpkshus:          "Vector Pack Signed Halfword Unsigned Saturate"
PPC_vpkswss:          "Vector Pack Signed Word Signed Saturate"
PPC_vpkswus:          "Vector Pack Signed Word Unsigned Saturate"
PPC_vpkuhum:          "Vector Pack Unsigned Halfword Unsigned Modulo"
PPC_vpkuhus:          "Vector Pack Unsigned Halfword Unsigned Saturate"
PPC_vpkuwum:          "Vector Pack Unsigned Word Unsigned Modulo"
PPC_vpkuwus:          "Vector Pack Unsigned Word Unsigned Saturate"
PPC_vrefp:            "Vector Reciprocal Estimate Single-Precision"
PPC_vrfim:            "Vector Round to Single-Precision Integer toward -Infinity"
PPC_vrfin:            "Vector Round to Single-Precision Integer Nearest"
PPC_vrfip:            "Vector Round to Single-Precision Integer toward +Infinity"
PPC_vrfiz:            "Vector Round to Single-Precision Integer toward Zero"
PPC_vrlb:             "Vector Rotate Left Byte"
PPC_vrlh:             "Vector Rotate Left Halfword"
PPC_vrlw:             "Vector Rotate Left Word"
PPC_vrsqrtefp:        "Vector Reciprocal Square Root Estimate Single-Precision"
PPC_vsel:             "Vector Select"
PPC_vsl:              "Vector Shift Left"
PPC_vslb:             "Vector Shift Left Byte"
PPC_vsldoi:           "Vector Shift Left Double by Octet Immediate"
PPC_vslh:             "Vector Shift Left Halfword"
PPC_vslo:             "Vector Shift Left by Octet"
PPC_vslw:             "Vector Shift Left Word"
PPC_vspltb:           "Vector Splat Byte"
PPC_vsplth:           "Vector Splat Halfword"
PPC_vspltisb:         "Vector Splat Immediate Signed Byte"
PPC_vspltish:         "Vector Splat Immediate Signed Halfword"
PPC_vspltisw:         "Vector Splat Immediate Signed Word"
PPC_vspltw:           "Vector Splat Word"
PPC_vsr:              "Vector Shift Right"
PPC_vsrab:            "Vector Shift Right Algebraic Byte"
PPC_vsrah:            "Vector Shift Right Algebraic Halfword"
PPC_vsraw:            "Vector Shift Right Algebraic Word"
PPC_vsrb:             "Vector Shift Right Byte"
PPC_vsrh:             "Vector Shift Right Halfword"
PPC_vsro:             "Vector Shift Right by Octet"
PPC_vsrw:             "Vector Shift Right Word"
PPC_vsubcuw:          "Vector Subtract and Write Carry-Out Unsigned Word"
PPC_vsubfp:           "Vector Subtract Single-Precision"
PPC_vsubsbs:          "Vector Subtract Signed Byte Saturate"
PPC_vsubshs:          "Vector Subtract Signed Halfword Saturate"
PPC_vsubsws:          "Vector Subtract Signed Word Saturate"
PPC_vsububm:          "Vector Subtract Unsigned Byte Modulo"
PPC_vsububs:          "Vector Subtract Unsigned Byte Saturate"
PPC_vsubuhm:          "Vector Subtract Unsigned Halfword Modulo"
PPC_vsubuhs:          "Vector Subtract Unsigned Halfword Saturate"
PPC_vsubuwm:          "Vector Subtract Unsigned Word Modulo"
PPC_vsubuws:          "Vector Subtract Unsigned Word Saturate"
PPC_vsum2sws:         "Vector Sum across Half Signed Word Saturate"
PPC_vsum4sbs:         "Vector Sum across Quarter Signed Byte Saturate"
PPC_vsum4shs:         "Vector Sum across Quarter Signed Halfword Saturate"
PPC_vsum4ubs:         "Vector Sum across Quarter Unsigned Byte Saturate"
PPC_vsumsws:          "Vector Sum across Signed Word Saturate"
PPC_vupkhpx:          "Vector Unpack High Pixel"
PPC_vupkhsb:          "Vector Unpack High Signed Byte"
PPC_vupkhsh:          "Vector Unpack High Signed Halfword"
PPC_vupklpx:          "Vector Unpack Low Pixel"
PPC_vupklsb:          "Vector Unpack Low Signed Byte"
PPC_vupklsh:          "Vector Unpack Low Signed Halfword"
PPC_vxor:             "Vector Logical XOR"
PPC_lxsdx:            "Load VSR Scalar Doubleword Indexed"
PPC_lxvd2x:           "Load VSR Vector Doubleword*2 Indexed"
PPC_lxvdsx:           "Load VSR Vector Doubleword & Splat Indexed"
PPC_lxvw4x:           "Load VSR Vector Word*4 Indexed"
PPC_stxsdx:           "Store VSR Scalar Doubleword Indexed"
PPC_stxvd2x:          "Store VSR Vector Doubleword*2 Indexed"
PPC_stxvw4x:          "Store VSR Vector Word*4 Indexed"
PPC_xsabsdp:          "VSX Scalar Absolute Value Double-Precision"
PPC_xsadddp:          "VSX Scalar Add Double-Precision"
PPC_xscmpodp:         "VSX Scalar Compare Ordered Double-Precision"
PPC_xscmpudp:         "VSX Scalar Compare Unordered Double-Precision"
PPC_xscpsgndp:        "VSX Scalar Copy Sign Double-Precision"
PPC_xscvdpsp:         "VSX Scalar Convert Double-Precision to SinglePrecision"
PPC_xscvdpsxds:       "VSX Scalar truncate Double-Precision to integer and Convert to Signed Fixed-Point Doubleword format with Saturate"
PPC_xscvdpsxws:       "VSX Scalar truncate Double-Precision to integer and Convert to Signed Fixed-Point Word format with Saturate"
PPC_xscvdpuxds:       "VSX Scalar truncate Double-Precision to integer and Convert to Unsigned Fixed-Point Doubleword format with Saturate"
PPC_xscvdpuxws:       "VSX Scalar truncate Double-Precision to integer and Convert to Unsigned Fixed-Point Word format with Saturate"
PPC_xscvspdp:         "VSX Scalar Convert Single-Precision to DoublePrecision format"
PPC_xscvsxddp:        "VSX Scalar Convert and round Signed Fixed-Point Doubleword to Double-Precision format"
PPC_xscvuxddp:        "VSX Scalar Convert and round Unsigned Fixed-Point Doubleword to Double-Precision format"
PPC_xsdivdp:          "VSX Scalar Divide Double-Precision"
PPC_xsmaddadp:        "VSX Scalar Multiply-Add Type-A Double-Precision"
PPC_xsmaddmdp:        "VSX Scalar Multiply-Add Type-M Double-Precision"
PPC_xsmaxdp:          "VSX Scalar Maximum Double-Precision"
PPC_xsmindp:          "VSX Scalar Minimum Double-Precision"
PPC_xsmsubadp:        "VSX Scalar Multiply-Subtract Type-A Double-Precision"
PPC_xsmsubmdp:        "VSX Scalar Multiply-Subtract Type-M Double-Precision"
PPC_xsmuldp:          "VSX Scalar Multiply Double-Precision"
PPC_xsnabsdp:         "VSX Scalar Negative Absolute Value Double-Precision"
PPC_xsnegdp:          "VSX Scalar Negate Double-Precision"
PPC_xsnmaddadp:       "VSX Scalar Negative Multiply-Add Type-A DoublePrecision"
PPC_xsnmaddmdp:       "VSX Scalar Negative Multiply-Add Type-M DoublePrecision"
PPC_xsnmsubadp:       "VSX Scalar Negative Multiply-Subtract Type-A DoublePrecision"
PPC_xsnmsubmdp:       "VSX Scalar Negative Multiply-Subtract Type-M DoublePrecision"
PPC_xsrdpi:           "VSX Scalar Round to Double-Precision Integer"
PPC_xsrdpic:          "VSX Scalar Round to Double-Precision Integer using Current rounding mode"
PPC_xsrdpim:          "VSX Scalar Round to Double-Precision Integer toward Infinity"
PPC_xsrdpip:          "VSX Scalar Round to Double-Precision Integer toward + Infinity"
PPC_xsrdpiz:          "VSX Scalar Round to Double-Precision Integer toward Zero"
PPC_xsredp:           "VSX Scalar Reciprocal Estimate Double-Precision"
PPC_xsrsqrtedp:       "VSX Scalar Reciprocal Square Root Estimate DoublePrecision"
PPC_xssqrtdp:         "VSX Scalar Square Root Double-Precision"
PPC_xssubdp:          "VSX Scalar Subtract Double-Precision"
PPC_xstdivdp:         "VSX Scalar Test for software Divide Double-Precision"
PPC_xstsqrtdp:        "VSX Scalar Test for software Square Root DoublePrecision"
PPC_xvabsdp:          "VSX Vector Absolute Value Double-Precision"
PPC_xvabssp:          "VSX Vector Absolute Value Single-Precision"
PPC_xvadddp:          "VSX Vector Add Double-Precision"
PPC_xvaddsp:          "VSX Vector Add Single-Precision"
PPC_xvcmpeqdp:        "VSX Vector Compare Equal To Double-Precision"
PPC_xvcmpeqsp:        "VSX Vector Compare Equal To Single-Precision"
PPC_xvcmpgedp:        "VSX Vector Compare Greater Than or Equal To Double-Precision"
PPC_xvcmpgesp:        "VSX Vector Compare Greater Than or Equal To SinglePrecision"
PPC_xvcmpgtdp:        "VSX Vector Compare Greater Than Double-Precision"
PPC_xvcmpgtsp:        "VSX Vector Compare Greater Than Single-Precision"
PPC_xvcpsgndp:        "VSX Vector Copy Sign Double-Precision"
PPC_xvcpsgnsp:        "VSX Vector Copy Sign Single-Precision"
PPC_xvcvdpsp:         "VSX Vector round and Convert Double-Precision to Single-Precision format"
PPC_xvcvdpsxds:       "VSX Vector truncate Double-Precision to integer and Convert to Signed Fixed-Point Doubleword Saturate"
PPC_xvcvdpsxws:       "VSX Vector truncate Double-Precision to integer and Convert to Signed Fixed-Point Word Saturate"
PPC_xvcvdpuxds:       "VSX Vector truncate Double-Precision to integer and Convert to Unsigned Fixed-Point Doubleword format with Saturate"
PPC_xvcvdpuxws:       "VSX Vector truncate Double-Precision to integer and Convert to Unsigned Fixed-Point Word format with Saturate"
PPC_xvcvspdp:         "VSX Vector Convert Single-Precision to DoublePrecision"
PPC_xvcvspsxds:       "VSX Vector truncate Single-Precision to integer and Convert to Signed Fixed-Point Doubleword format with Saturate"
PPC_xvcvspsxws:       "VSX Vector truncate Single-Precision to integer and Convert to Signed Fixed-Point Word format with Saturate"
PPC_xvcvspuxds:       "VSX Vector truncate Single-Precision to integer and Convert to Unsigned Fixed-Point Doubleword format with Saturate"
PPC_xvcvspuxws:       "VSX Vector truncate Single-Precision to integer and Convert to Unsigned Fixed-Point Word Saturate"
PPC_xvcvsxddp:        "VSX Vector Convert and round Signed Fixed-Point Doubleword to Double-Precision format"
PPC_xvcvsxdsp:        "VSX Vector Convert and round Signed Fixed-Point Doubleword to Single-Precision format"
PPC_xvcvsxwdp:        "VSX Vector Convert Signed Fixed-Point Word to Double-Precision format"
PPC_xvcvsxwsp:        "VSX Vector Convert and round Signed Fixed-Point Word to Single-Precision format"
PPC_xvcvuxddp:        "VSX Vector Convert and round Unsigned Fixed-Point Doubleword to Double-Precision format"
PPC_xvcvuxdsp:        "VSX Vector Convert and round Unsigned Fixed-Point Doubleword to Single-Precision format"
PPC_xvcvuxwdp:        "VSX Vector Convert Unsigned Fixed-Point Word to Double-Precision format"
PPC_xvcvuxwsp:        "VSX Vector Convert and round Unsigned Fixed-Point Word to Single-Precision format"
PPC_xvdivdp:          "VSX Vector Divide Double-Precision"
PPC_xvdivsp:          "VSX Vector Divide Single-Precision"
PPC_xvmaddadp:        "VSX Vector Multiply-Add Type-A Double-Precision"
PPC_xvmaddasp:        "VSX Vector Multiply-Add Type-A Single-Precision"
PPC_xvmaddmdp:        "VSX Vector Multiply-Add Type-M Double-Precision"
PPC_xvmaddmsp:        "VSX Vector Multiply-Add Type-M Single-Precision"
PPC_xvmaxdp:          "VSX Vector Maximum Double-Precision"
PPC_xvmaxsp:          "VSX Vector Maximum Single-Precision"
PPC_xvmindp:          "VSX Vector Minimum Double-Precision"
PPC_xvminsp:          "VSX Vector Minimum Single-Precision"
PPC_xvmsubadp:        "VSX Vector Multiply-Subtract Type-A Double-Precision"
PPC_xvmsubasp:        "VSX Vector Multiply-Subtract Type-A Single-Precision"
PPC_xvmsubmdp:        "VSX Vector Multiply-Subtract Type-M Double-Precision"
PPC_xvmsubmsp:        "VSX Vector Multiply-Subtract Type-M Single-Precision"
PPC_xvmuldp:          "VSX Vector Multiply Double-Precision"
PPC_xvmulsp:          "VSX Vector Multiply Single-Precision"
PPC_xvnabsdp:         "VSX Vector Negative Absolute Value Double-Precision"
PPC_xvnabssp:         "VSX Vector Negative Absolute Value Single-Precision"
PPC_xvnegdp:          "VSX Vector Negate Double-Precision"
PPC_xvnegsp:          "VSX Vector Negate Single-Precision"
PPC_xvnmaddadp:       "VSX Vector Negative Multiply-Add Type-A DoublePrecision"
PPC_xvnmaddasp:       "VSX Vector Negative Multiply-Add Type-A SinglePrecision"
PPC_xvnmaddmdp:       "VSX Vector Negative Multiply-Add Type-M DoublePrecision"
PPC_xvnmaddmsp:       "VSX Vector Negative Multiply-Add Type-M SinglePrecision"
PPC_xvnmsubadp:       "VSX Vector Negative Multiply-Subtract Type-A DoublePrecision"
PPC_xvnmsubasp:       "VSX Vector Negative Multiply-Subtract Type-A SinglePrecision"
PPC_xvnmsubmdp:       "VSX Vector Negative Multiply-Subtract Type-M DoublePrecision"
PPC_xvnmsubmsp:       "VSX Vector Negative Multiply-Subtract Type-M SinglePrecision"
PPC_xvrdpi:           "VSX Vector Round to Double-Precision Integer"
PPC_xvrdpic:          "VSX Vector Round to Double-Precision Integer using Current rounding mode"
PPC_xvrdpim:          "VSX Vector Round to Double-Precision Integer toward Infinity"
PPC_xvrdpip:          "VSX Vector Round to Double-Precision Integer toward + Infinity"
PPC_xvrdpiz:          "VSX Vector Round to Double-Precision Integer toward Zero"
PPC_xvredp:           "VSX Vector Reciprocal Estimate Double-Precision"
PPC_xvresp:           "VSX Vector Reciprocal Estimate Single-Precision"
PPC_xvrspi:           "VSX Vector Round to Single-Precision Integer"
PPC_xvrspic:          "VSX Vector Round to Single-Precision Integer using Current rounding mode"
PPC_xvrspim:          "VSX Vector Round to Single-Precision Integer toward Infinity"
PPC_xvrspip:          "VSX Vector Round to Single-Precision Integer toward + Infinity"
PPC_xvrspiz:          "VSX Vector Round to Single-Precision Integer toward Zero"
PPC_xvrsqrtedp:       "VSX Vector Reciprocal Square Root Estimate DoublePrecision"
PPC_xvrsqrtesp:       "VSX Vector Reciprocal Square Root Estimate SinglePrecision"
PPC_xvsqrtdp:         "VSX Vector Square Root Double-Precision"
PPC_xvsqrtsp:         "VSX Vector Square Root Single-Precision"
PPC_xvsubdp:          "VSX Vector Subtract Double-Precision"
PPC_xvsubsp:          "VSX Vector Subtract Single-Precision"
PPC_xvtdivdp:         "VSX Vector Test for software Divide Double-Precision"
PPC_xvtdivsp:         "VSX Vector Test for software Divide Single-Precision"
PPC_xvtsqrtdp:        "VSX Vector Test for software Square Root DoublePrecision"
PPC_xvtsqrtsp:        "VSX Vector Test for software Square Root SinglePrecision"
PPC_xxland:           "VSX Logical AND"
PPC_xxlandc:          "VSX Logical AND with Complement"
PPC_xxlnor:           "VSX Logical NOR"
PPC_xxlor:            "VSX Logical OR"
PPC_xxlxor:           "VSX Logical XOR"
PPC_xxmrghw:          "VSX Merge High Word"
PPC_xxmrglw:          "VSX Merge Low Word"
PPC_xxpermdi:         "VSX Permute Doubleword Immediate"
PPC_xxsel:            "VSX Select"
PPC_xxsldwi:          "VSX Shift Left Double by Word Immediate"
PPC_xxspltw:          "VSX Splat Word"
PPC_wait:             "Wait"
PPC_dss:              "Data Stream Stop"
PPC_dssall:           "Data Stream Stop All"
PPC_dst:              "Data Stream Touch"
PPC_dstt:             "Data Stream Touch Transient"
PPC_dstst:            "Data Stream Touch for Store"
PPC_dststt:           "Data Stream Touch for Store Transient"
PPC_lvlx:             "Load Vector Left Indexed"
PPC_lvlxl:            "Load Vector Left Indexed Last"
PPC_lvrx:             "Load Vector Right Indexed"
PPC_lvrxl:            "Load Vector Right Indexed Last"
PPC_stvlx:            "Store Vector Left Indexed"
PPC_stvlxl:           "Store Vector Left Indexed Last"
PPC_stvrx:            "Store Vector Right Indexed"
PPC_stvrxl:           "Store Vector Right Indexed Last"

PPC_add16i:           "Add Immediate"
PPC_add2i:            "Add (2 operand) Immediate and Record"
PPC_add2is:           "Add (2 operand) Immediate Shifted"
PPC_and2i:            "AND (two operand) Immediate"
PPC_and2is:           "AND (2 operand) Immediate Shifted"
PPC_cmp16i:           "Compare Immediate Word"
PPC_cmph:             "Compare Halfword"
PPC_cmph16i:          "Compare Halfword Immediate"
PPC_cmphl:            "Compare Halfword Logical"
PPC_cmphl16i:         "Compare Halfword Logical Immediate"
PPC_cmpl16i:          "Compare Logical Immediate Word"
PPC_mull2i:           "Multiply (2 operand) Low Immediate"
PPC_or2i:             "OR (two operand) Immediate"
PPC_or2is:            "OR (2 operand) Immediate Shifted"
PPC_rlw:              "Rotate Left Word"
PPC_rlwi:             "Rotate Left Word Immediate"
PPC_bclri:            "Bit Clear Immediate"
//PPC_bctr:            "Branch to Count Register "
//PPC_bctrl:           "Branch to Count Register and Link"
PPC_bgeni:            "Bit Generate Immediate"
PPC_bmaski:           "Bit Mask Generate Immediate"
PPC_bseti:            "Bit Set Immediate"
PPC_btsti:            "Bit Test Immediate"
PPC_extzb:            "Extend Zero Byte"
PPC_extzh:            "Extend Zero Halfword"
PPC_illegal:          "Illegal"
PPC_mfar:             "Move from Alternate Register"
PPC_mtar:             "Move To Alternate Register"
PPC_sub:              "Subtract"
PPC_sub16i:           "Subtract Immediate"
PPC_sub2i:            "Subtract (2 operand) Immediate"
PPC_sub2is:           "Subtract (2 operand) Immediate Shifted"
PPC_extldi:     "Extract and Left Justify Immediate"
PPC_extrdi:     "Extract and Right Justify Immediate"
PPC_insrdi:     "Insert from Right Immediate"
PPC_rotldi:     "Rotate Left Immediate"
PPC_rotrdi:     "Rotate Right Immediate"
PPC_rotld:      "Rotate Left"
PPC_sldi:       "Shift Left Immediate"
PPC_srdi:       "Shift Right Immediate"
PPC_clrldi:     "Clear Left Immediate"
PPC_clrrdi:     "Clear Right Immediate"
PPC_clrlsldi:   "Clear Left and Shift Left Immediate"

PPC_xnop:       "Extended No Operation"
PPC_hnop:       "Reserved no-op hint"
PPC_dcbfl:      "Data Cache Block Flush Local"
PPC_dcbflp:     "Data Cache Block Flush Local Primary"
PPC_dcbtt:      "Data Cache Block Touch"
PPC_dcbtstt:    "Data Cache Block Touch for Store"
PPC_lwsync:     "Lightweight Sync"
PPC_ptesync:    "Page Table Entry Sync"
PPC_waitrsv:    "Wait For Reservation Loss"
PPC_waitimpl:   "Wait For Implementation-specific Condition"
PPC_evmr:       "Vector Move"
PPC_evnot:      "Vector Not"
PPC_mtcr:       "Move to Condition Register"
PPC_dcbz128:    "Data Cache Block Clear to Zero (128 bytes)"
PPC_xvmovdp:    "VSX Vector Copy Double-Precision"
PPC_xvmovsp:    "VSX Vector Copy Single-Precision"
PPC_xxspltd:    "VSX Splat Doubleword"
PPC_xxmrghd:    "VSX Merge High Doubleword"
PPC_xxmrgld:    "VSX Merge Low Doubleword"
PPC_xxswapd:    "VSX Swap Doubleword"

PPC_dcbz128:    "Data Cache Block Clear to Zero (128 bytes)"
PPC_mtmsree:    "Move to Machine State Register EE"

// new Xbox 360 instructions (VMX128)
PPC_vcfpsxws:   "Vector Convert From Single-Precision to Signed Fixed-point Word Saturate"
PPC_vcfpuxws:   "Vector Convert From Single-Precision to Unsigned Fixed-point Word Saturate"
PPC_vcsxwfp:    "Vector Convert from Signed Fixed-point Word to Single-Precision"
PPC_vcuxwfp:    "Vector Convert from Unsigned Fixed-point Word to Single-Precision"
PPC_vmaddcfp:   "Vector Convert from Unsigned Fixed-point Word to Single-Precision"
PPC_vmsum3fp:   "Vector Multiply-Sum 3-way Single-Precision"
PPC_vmsum4fp:   "Vector Multiply-Sum 4-way Single-Precision"
PPC_vmulfp:     "Vector Multiply Single-Precision"
PPC_vpermwi:    "Vector Permute Word Immediate"
PPC_vpkd3d:     "Vector Pack D3Dtype, Rotate Left Immediate and Mask Insert"
PPC_vrlimi:     "Vector Rotate Left Immediate and Mask Insert"
PPC_vupkd3d:    "Vector Unpack D3Dtype"

// Paired Singles (750CL/Gekko/Broadway)
PPC_ps_cmpu0:   "Paired Single Compare Unordered High"
PPC_psq_lx:     "Paired Single Quantized Load Indexed"
PPC_psq_stx:    "Paired Single Quantized Store Indexed"
PPC_ps_sum0:    "Paired Single Vector Sum High"
PPC_ps_sum1:    "Paired Single Vector Sum Low"
PPC_ps_muls0:   "Paired Single Multiply Scalar High"
PPC_ps_muls1:   "Paired Single Multiply Scalar Low"
PPC_ps_madds0:  "Paired Single Multiply-Add Scalar High"
PPC_ps_madds1:  "Paired Single Multiply-Add Scalar Low"
PPC_ps_div:     "Paired Single Divide"
PPC_ps_sub:     "Paired Single Subtract"
PPC_ps_add:     "Paired Single Add"
PPC_ps_sel:     "Paired Single Select"
PPC_ps_res:     "Paired Single Reciprocal Estimate"
PPC_ps_mul:     "Paired Single Multiply"
PPC_ps_rsqrte:  "Paired Single Reciprocal Square Root Estimate"
PPC_ps_msub:    "Paired Single Multiply-Subtract"
PPC_ps_madd:    "Paired Single Multiply-Add"
PPC_ps_nmsub:   "Paired Single Negative Multiply-Subtract"
PPC_ps_nmadd:   "Paired Single Negative Multiply-Add"
PPC_ps_cmpo0:   "Paired Single Compare Ordered High"
PPC_psq_lux:    "Paired Single Quantized Load with update Indexed"
PPC_psq_stux:   "Paired Single Quantized Store with update Indexed"
PPC_ps_neg:     "Paired Single Negate"
PPC_ps_cmpu1:   "Paired Single Compare Unordered Low"
PPC_ps_mr:      "Paired Single Move Register"
PPC_ps_cmpo1:   "Paired Single Compare Ordered Low"
PPC_ps_nabs:    "Paired Single Negative Absolute Value"
PPC_ps_abs:     "Paired Single Absolute Value"
PPC_ps_merge00: "Paired Single Merge High"
PPC_ps_merge01: "Paired Single Merge Direct"
PPC_ps_merge10: "Paired Single Merge Swapped"
PPC_ps_merge11: "Paired Single Merge Low"
PPC_dcbz_l:     "Data Cache Block Set to Zero Locked"
PPC_psq_l:      "Paired Single Quantized Load"
PPC_psq_lu:     "Paired Single Quantized Load update"
PPC_psq_st:     "Paired Single Quantized Store"
PPC_psq_stu:    "Paired Single Quantized Store update"

// additional SPE/EFPU2 instructions
PPC_evfsmadd:   "Vector Floating-Point Single-Precision Multiply-Add"
PPC_evfsmsub:   "Vector Floating-Point Single-Precision Multiply-Subtract"
PPC_evfssqrt:   "Vector Floating-Point Single-Precision Square Root"
PPC_evfsnmadd:  "Vector Floating-Point Single-Precision Negative Multiply-Add"
PPC_evfsnmsub:  "Vector Floating-Point Single-Precision Negative Multiply-Subtract"
PPC_evfsmax:    "Vector Floating-Point Single-Precision Maximum"
PPC_evfsmin:    "Vector Floating-Point Single-Precision Minimum"
PPC_evfsaddsub: "Vector Floating-Point Single-Precision Add / Subtract"
PPC_evfssubadd: "Vector Floating-Point Single-Precision Subtract / Add"
PPC_evfssum:    "Vector Floating-Point Single-Precision Sums"
PPC_evfsdiff:   "Vector Floating-Point Single-Precision Differences"
PPC_evfssumdiff:"Vector Floating-Point Single-Precision Sum / Difference"
PPC_evfsdiffsum:"Vector Floating-Point Single-Precision Difference / Sum"
PPC_evfsaddx:   "Vector Floating-Point Single-Precision Add Exchanged"
PPC_evfssubx:   "Vector Floating-Point Single-Precision Subtract Exchanged"
PPC_evfsaddsubx:"Vector Floating-Point Single-Precision Add / Subtract Exchanged"
PPC_evfssubaddx:"Vector Floating-Point Single-Precision Subtract / Add Exchanged"
PPC_evfsmulx:   "Vector Floating-Point Single-Precision Multiply Exchanged"
PPC_evfsmule:   "Vector Floating-Point Single-Precision Multiply By Even Element"
PPC_evfsmulo:   "Vector Floating-Point Single-Precision Multiply By Odd Element"
PPC_evfscfh:    "Vector Convert Floating-Point Single-Precision from Half-Precision"
PPC_evfscth:    "Vector Convert Floating-Point Single-Precision to Half-Precision"
PPC_efsmax:     "Floating-Point Single-Precision Maximum"
PPC_efsmin:     "Floating-Point Single-Precision Minimum"
PPC_efsmadd:    "Floating-Point Single-Precision Multiply-Add"
PPC_efsmsub:    "Floating-Point Single-Precision Multiply-Subtract"
PPC_efssqrt:    "Floating-Point Single-Precision Square Root"
PPC_efsnmadd:   "Floating-Point Single-Precision Negative Multiply-Add"
PPC_efsnmsub:   "Floating-Point Single-Precision Negative Multiply-Subtract"
PPC_efscfh:     "Convert Floating-Point Single-Precision from Half-Precision"
PPC_efscth:     "Convert Floating-Point Single-Precision to Half-Precision"

// Volatile Context Save/Restore APU
PPC_lmvgprw:    "Load Multiple Volatile GPR Word"
PPC_stmvgprw:   "Store Multiple Volatile GPR Word"
PPC_lmvsprw:    "Load Multiple Volatile SPR Word"
PPC_stmvsprw:   "Store Multiple Volatile SPR Word"
PPC_lmvsrrw:    "Load Multiple Volatile SRR Word"
PPC_stmvsrrw:   "Store Multiple Volatile SRR Word"
PPC_lmvcsrrw:   "Load Multiple Volatile CSRR Word"
PPC_stmvcsrrw:  "Store Multiple Volatile CSRR Word"
PPC_lmvdsrrw:   "Load Multiple Volatile DSRR Word"
PPC_stmvdsrrw:  "Store Multiple Volatile DSRR Word"
PPC_lmvmcsrrw:  "Load Multiple Volatile MCSRR Word"
PPC_stmvmcsrrw: "Store Multiple Volatile MCSRR Word"
